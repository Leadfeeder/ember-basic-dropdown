{{#let (element (or @htmlTag "div")) as |Element|}}
  <Element
    class="ember-basic-dropdown-trigger{{if @renderInPlace " ember-basic-dropdown-trigger--in-place"}}{{if @hPosition (concat " ember-basic-dropdown-trigger--" @hPosition)}}{{if @vPosition (concat " ember-basic-dropdown-trigger--" @vPosition)}} {{@defaultClass}}"
    role="button"
    tabindex={{unless @dropdown.disabled "0"}}
    data-ebd-id="{{@dropdown.uniqueId}}-trigger"
    aria-owns="ember-basic-dropdown-content-{{@dropdown.uniqueId}}"
    aria-expanded={{if @dropdown.isOpen "true"}}
    aria-disabled={{if @dropdown.disabled "true"}}
    {{will-destroy this.removeGlobalHandlers}}
    ...attributes
    {{on "mousedown" this.handleMouseDown}}
    {{on "click" this.handleClick}}
    {{on "keydown" this.handleKeyDown}}
    {{on "touchstart" this.handleTouchStart}}
    {{on "touchend" this.handleTouchEnd}}

    {{!-- V1 compatibility - See #498 --}}
    {{#if @onKeyDown}}
      {{on "keydown" @onKeyDown}}
    {{/if}}
    {{#if @onMouseDown}}
      {{on "mousedown" @onMouseDown}}
    {{/if}}
    {{#if @onTouchEnd}}
      {{on "touchend" @onTouchEnd}}
    {{/if}}
    {{#if @onClick}}
      {{on "click" @onClick}}
    {{/if}}
    {{#if @onMouseEnter}}
      {{on "mouseenter" @onMouseEnter}}
    {{/if}}
    {{#if @onMouseLeave}}
      {{on "mouseleave" @onMouseLeave}}
    {{/if}}
    {{#if @onFocus}}
      {{on "focus" @onFocus}}
    {{/if}}
    {{#if @onBlur}}
      {{on "blur" @onBlur}}
    {{/if}}
    {{#if @onFocusIn}}
      {{on "focusin" @onFocusIn}}
    {{/if}}
    {{#if @onFocusOut}}
      {{on "focusout" @onFocusOut}}
    {{/if}}
    >
    {{yield}}
  </Element>
{{/let}}